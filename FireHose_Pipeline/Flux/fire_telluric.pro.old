pro fire_telluric_initcommon

  common fire_telluric_common, tel_indx, telobjs, telluric

end

pro fire_telluric_event, ev

  common fire_telluric_common

  WIDGET_CONTROL, ev.top, get_uvalue = state, /no_copy
  WIDGET_CONTROL, ev.id, get_uvalue = uval
  
  case uval of
      'LIST': 
      'PLOTTELL': fire_telluric_display, state
      'COMBINE': fire_telluric_combine, state
      'CANCEL': begin
          widget_control, ev.top, /destroy
          user_cancel=1
          return 
      end
      'DONE' : begin
         fire_telluric_combine, state
         widget_control, ev.top, /destroy
         return
      end
      else:
  endcase

;
  WIDGET_CONTROL, state.base_id, set_uvalue = state, /no_copy
  return
end
  
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

pro fire_telluric_display, state

  common fire_telluric_common

  tel_indx = widget_info(state.list_id, /list_select)
;  print, telobjs[tel_indx]

  if (n_elements(tel_indx) EQ 1) then begin
     objstr = xmrdfits(telobjs[tel_indx[0]],1)
     x_splot, objstr.wave, objstr.fx, title="Individual telluric extractions", /block
  endif

  if (n_elements(tel_indx) EQ 2) then begin
     objstr = xmrdfits(telobjs[tel_indx[0]],1)
     objstr2 = xmrdfits(telobjs[tel_indx[1]],1)
     x_splot, objstr.wave, objstr.fx, ytwo=objstr2.fx, title="Individual telluric extractions", /block
  endif

  if (n_elements(tel_indx) gt 2) then begin
     print, "Only two spectra may be over-plotted at a time.  Displaying first two in list..."
     objstr = xmrdfits(telobjs[tel_indx[0]],1)
     objstr2 = xmrdfits(telobjs[tel_indx[1]],1)
     x_splot, objstr.wave, objstr.fx, ytwo=objstr2.fx, title="Individual telluric extractions", /block
  endif


end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

pro fire_telluric_combine, state

  common fire_telluric_common

  tel_indx = widget_info(state.list_id, /list_select)

  if (n_elements(tel_indx) EQ 1) then begin
     telluric = telobjs[tel_indx[0]]
  endif

  if (n_elements(tel_indx) EQ 2) then begin
     filelist = [telobjs[tel_indx[0]],telobjs[tel_indx[1]]]
     telluric = fire_stdcombine(filelist, sigrej=3, /chk)
  endif

  return

end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

pro fire_telluric, fire, objstrfile=objstrfile, CLOBBER=clobber

  common fire_telluric_common

  fire_telluric_initcommon

  state = { $
          indx: -1L, $
          list_id: 0L, $
          base_id: 0L $
          }
     
  if (NOT keyword_set(OBJSTRFILE)) then begin
     print, "ERROR: No object structure found!"
     return
  endif

  objstr = 'Object/'+strtrim(objstrfile,2)

  if (FILE_TEST(objstr) EQ 0) then begin
     print, "ERROR: No object structure found!"
     return
  endif

  tmpobj = objstrfile

  struct_entry = where(strtrim(fire.objstrfile,2) EQ objstr, nmatch)
  num_tells = fire[struct_entry[0]].num_tfiles

  if (num_tells EQ 0) then begin
     tmpnum = n_elements(strsplit(fire[struct_entry[0]].tfiles, ';', /extract))
     if (tmpnum NE num_tells) then begin
        fire[struct_entry[0]].num_tfiles = tmpnum        
        num_tells = tmpnum
     endif
  endif

  

;;;; Combine multiple exposures of the same telluric; let the user
;;;; choose which exposures to use.

  telobjs = strarr(num_tells)

  if (num_tells GT 1) then begin
     
     ; Grab the possible telluric obstr file names
     for itel=0, num_tells-1 do begin
        telobjs[itel] = fire_get(fire[struct_entry[0]],/TOBJSTRFILE, std=itel+1)
        filenum = (strsplit(telobjs[itel], '_.', /extract))[1]
;        matchstr = "Object/Tel*"+strtrim(filenum,2)+"*"
        matchstr = "Object/Obj*"+strtrim(filenum,2)+"*"
        matchfiles = file_search(matchstr)
        if (n_elements(matchfiles) GT 1 OR matchfiles[0] NE '') then begin
           if (n_elements(tellfiles) EQ 0) then begin
              tellfiles = matchfiles
           endif else begin
              tellfiles = [tellfiles, matchfiles]
           endelse
        endif
     endfor

     if (n_elements(tellfiles) GT 0) then begin

        tellfiles = tellfiles[uniq(tellfiles)]

        if (n_elements(uniq(tellfiles)) EQ 1) then begin
           telluric = tellfiles[0]
        endif 
        
        if (n_elements(uniq(tellfiles)) GT 1) then begin
           print, "Multiple tellurics"
           print, " "
           print, "  Multiple telluric correction spectra found for this object."
           print, "  This may have happened because you already ran telluric"
           print, "  correction on this file.  If you intend to clobber these, "
           print, "  then delete the files listed below and try again."
           print, " "
           print, " Delete:"
           for itel=0, n_elements(tellfiles)-1 do begin
              print, tellfiles[itel]
           endfor
           print, " "
           stop
           return
        endif
     endif

     if (n_elements(tellfiles) NE 0) then begin
;    Make a little widget for choosing which ones to combine/use
        base = WIDGET_BASE( title = 'fire_telluric', /column, $
                            xoffset=xoffset,yoffset=yoffset)
        state.base_id = base
        
        msg = WIDGET_LABEL(base, Value='Multiple exposures found for this calibrator.')
        msg = WIDGET_LABEL(base, Value='Select exposures to view or combine and')
        msg = WIDGET_LABEL(base, Value='click continue to move on to telluric')
        msg = WIDGET_LABEL(base, Value='calibration.')
        toolbar = WIDGET_BASE( state.base_id, /row, /frame, /base_align_center, /align_center)
        chg_objid = WIDGET_BUTTON(toolbar, value='View Extraction',uvalue='PLOTTELL', /align_right)
;     chg_type = WIDGET_BUTTON(toolbar, value='Combine Exposures',uvalue='COMBINE', /align_right)
        state.list_id = widget_list(base, value=telobjs, xsize=40L, ysize=5L, $
                                    uvalue = 'LIST', /MULTIPLE)
        cancel = WIDGET_BUTTON(toolbar, value='Cancel',uvalue='CANCEL', /align_right)
        cancel = WIDGET_BUTTON(toolbar, value='Continue',uvalue='DONE', /align_right)
        WIDGET_CONTROL, base, /realize
        WIDGET_CONTROL, base, set_uvalue=state, /no_copy
        xmanager, 'fire_telluric', base
     endif

  endif else begin
     ; Case where only 1 file available
     telobjs[0] = fire_get(fire[struct_entry[0]],/TOBJSTRFILE, std=1)
     telluric   = telobjs[0]
  endelse

  B = fire[struct_entry[0]].tbmags
  V = fire[struct_entry[0]].tvmags
  filenum = (strsplit(telluric, '_.', /extract))[1]

  if (strpos(telluric,'/') NE -1) then begin
     telluric = (strsplit(telluric,'/',/Extract))[1]
  endif
  outfile = telluric
  if (strpos(telluric, "tellspec") EQ -1) then begin
     strput, outfile, "Tel", 0
     outfile1 = ((strsplit(outfile,'.', /extract))[0])
     outfile  = ((strsplit(outfile,'.', /extract))[0])+'_tellspec.fits'
  endif

  if (x_chkfil('Object/'+strtrim(outfile,2), /SILENT) EQ 0) OR keyword_set(CLOBBER) then begin
     fire_xtellcor, object=tmpobj, userpath="Object/", telluric=telluric, bmag=B, vmag=V, outfile=outfile1
  endif else begin
     fire_xtellcor_finish, tmpobj, userpath="Object/", telluric=outfile
  endelse     
     
end
